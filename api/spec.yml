openapi: 3.0.3
servers:
  - url: http://localhost:3000
info:
  title: Demo server
  description: demo server
  version: 1.0.0
components:
  schemas:
    User:
      type: object
      required:
        - id
        - email
        - first_name
        - last_name
      properties:
        id:
          x-go-type: uuid.UUID
          x-go-name: ID
          x-go-type-import:
            path: github.com/google/uuid
        email: 
          type: string
        first_name: 
          type: string
        last_name: 
          type: string
    UserArray:
      type: array
      items:
        $ref: '#/components/schemas/User'
    ErrMsg:
      type: object
      required:
        - message
      properties:
        message:
          type: string
paths:
  "/user":
    post:
      summary: Creates a user
      requestBody:
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/User"
      responses: 
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: The user was successfully created.
        default:
          description: Wrong input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
    get:
      summary: Lists all users
      responses: 
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserArray"
          description: List of users.
        default:
          description: Wrong input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
  "/user/{id}":
    put:
      summary: Updates a user
      parameters:
        - in: path
          name: id
          schema:
            type: string
            x-go-type: uuid.UUID
            x-go-name: ID
            x-go-type-import:
              path: github.com/google/uuid
          required: true
      requestBody:
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/User"
      responses: 
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: The user was successfully updated.
        default:
          description: Wrong input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
    get:
      summary: Retries a user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
            x-go-type: uuid.UUID
            x-go-name: ID
            x-go-type-import:
              path: github.com/google/uuid
          required: true
      responses: 
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: The user was successfully retrieved.
        default:
          description: Wrong input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
    delete:
      summary: Deletes a user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
            x-go-name: ID
            x-go-type-name: ID
            x-go-type: uuid.UUID
            x-go-type-import:
              path: github.com/google/uuid
          required: true
      responses: 
        "200":
          description: Successfull deletion
        default:
          description: Wrong input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
